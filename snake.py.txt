import pygame
import random

# Define some colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)

# Set the dimensions of the screen
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600

# Set the size of each grid cell
GRID_SIZE = 20

class Snake:
    def __init__(self):
        self.size = 1
        self.elements = [[SCREEN_WIDTH/2, SCREEN_HEIGHT/2]]
        self.direction = 'right'

    def draw(self, surface):
        for element in self.elements:
            pygame.draw.rect(surface, GREEN, pygame.Rect(element[0], element[1], GRID_SIZE, GRID_SIZE))

    def move(self):
        if self.direction == 'right':
            self.elements[0][0] += GRID_SIZE
        elif self.direction == 'left':
            self.elements[0][0] -= GRID_SIZE
        elif self.direction == 'up':
            self.elements[0][1] -= GRID_SIZE
        elif self.direction == 'down':
            self.elements[0][1] += GRID_SIZE

    def add_element(self):
        self.elements.append([self.elements[-1][0], self.elements[-1][1]])

class Food:
    def __init__(self):
        self.position = [random.randrange(1, SCREEN_WIDTH/GRID_SIZE)*GRID_SIZE,
                          random.randrange(1, SCREEN_HEIGHT/GRID_SIZE)*GRID_SIZE]

    def draw(self, surface):
        pygame.draw.rect(surface, RED, pygame.Rect(self.position[0], self.position[1], GRID_SIZE, GRID_SIZE))

def main():
    # Initialize Pygame
    pygame.init()

    # Set the size of the screen
    screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))

    # Set the title of the screen
    pygame.display.set_caption('Snake Game')

    # Initialize the clock
    clock = pygame.time.Clock()

    # Create the snake and food objects
    snake = Snake()
    food = Food()

    # Initialize the score
    score = 0

    # Start the game loop
    while True:
        # Handle events
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_RIGHT:
                    snake.direction = 'right'
                elif event.key == pygame.K_LEFT:
                    snake.direction = 'left'
                elif event.key == pygame.K_UP:
                    snake.direction = 'up'
                elif event.key == pygame.K_DOWN:
                    snake.direction = 'down'

        # Move the snake
        snake.move()

        # Check if the snake has collided with the food
        if snake.elements[0] == food.position:
            food = Food()
            snake.add_element()
            score += 1

        # Check if the snake has collided with itself
        for element in snake.elements[1:]:
            if snake.elements[0] == element:
                pygame.quit()
                quit()

        # Check if the snake has collided with the walls
        if snake.elements[0][0] < 0 or snake.elements[0][0] >= SCREEN_WIDTH or \
           snake.elements[0][1] < 0 or snake.elements[0][1] >= SCREEN_HEIGHT:
            pygame.quit()
            quit()

        # Clear the screen
        screen.fill(BLACK)

        # Draw the snake and food
        snake.draw(screen)
 food.draw(screen)

        # Draw the score
        font = pygame.font.SysFont(None, 30)
        score_text = font.render('Score: ' + str(score), True, WHITE)
        screen.blit(score_text, (10, 10))

        # Update the screen
        pygame.display.update()

        # Set the frame rate
        clock.tick(10)

if __name__ == '__main__':
    main()